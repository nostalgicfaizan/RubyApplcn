
 

  

    

       it "assigns a newly created user as @user" do
        post :create, { :user => valid_attributes}#, valid_session
        assigns(:user).should be_a(User)
        assigns(:user).should be_persisted
      end
      it "redirects to the created user" do
       post :create, {:user => valid_attributes}#,valid_session 
       response.should redirect_to(User.all)
      end

      describe "with invalid params" do
      it "assigns a newly created but unsaved user as @user" do
        # Trigger the behavior that occurs when invalid params are submitted
        User.any_instance.stub(:save).and_return(false)
        post :create, {:user => { "name" => "invalid value" }}#, valid_session
        assigns(:user).should be_a_new(User)
      end

      #validating render action
      it "re-renders the 'new' template" do
        # Trigger the behavior that occurs when invalid params are submitted
        User.any_instance.stub(:save).and_return(false)
        post :create, {:user => { "name" => "invalid value" }}#, valid_session
        response.should render_template("new")
      end
    end
  end

    describe "DELETE destroy" do
    it "destroys the requested user along with its complete profile" do
      user = User.create! valid_attributes
      expect {
        delete :destroy, {:id => user.to_param}#, valid_session
      }.to change(Aganda, :count).by(-1)
    end

    it "redirects to the users list" do
      user = User.create! valid_attributes
      delete :destroy, {:id => User.to_param}#, valid_session
      response.should redirect_to(user_url)
    end
  end
end 
end
